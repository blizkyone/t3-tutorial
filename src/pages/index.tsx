import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import { useEffect } from "react";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime"
import Image from "next/image";

dayjs.extend(relativeTime)

const CreatePostWizard = () => {
  const { user} = useUser()

  if(!user) return null

  console.log(user)

  return (
    <div className="flex gap-4 w-full">
      <Image  width={56} height={56} src={user.profileImageUrl} alt='Profile image' className="rounded-full h-16 w-16"/>
     <input placeholder="Type emojis" className="p-2 bg-transparent grow outline-none"/>
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostWithUser) => {
  const { post, author} = props
  return (<div className="flex p-4 gap-4">
     <Image src={author.profileImageUrl} alt='Profile image' width={56} height={56} className="rounded-full h-14 w-14"/>
     <div className="flex flex-col">
      <div className="flex text-slate-300 gap-2">
      <span className="font-bold">{`@${author.username ? author.username : "anonymus"}`}</span><span>{`- ${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      
     <p>{post.content}</p>
     </div>
    
   
    </div>)
}

const Home: NextPage = () => {

  const { data, isLoading } = api.posts.getAll.useQuery()

  const user = useUser()

  console.log(data)

  if(isLoading) return <div>Loading...</div>

  if(!data) return <div>No posts available</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-x">
        <div className="border-b border-slate-400 p-4 flex justify-center">
          {user.isSignedIn ? <CreatePostWizard/> : <SignInButton  /> }
        </div>
        <div>
          {data?.map((post, i) => <PostView {...post} key={post.post.id}/>)}
        </div>
        </div>
        
      
      </main>
    </>
  );
};

export default Home;
